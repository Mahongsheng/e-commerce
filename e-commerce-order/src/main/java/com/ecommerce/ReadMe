OrderController中的接口：
    缩写含义：
     * sto->原式订单信息,即StoStoreOrder
     * sol->原式订单详细信息，即SolStoreOrderLineItem
     * sao->销售订单，即
     * sal->销售订单明细，即

    1.应用场景：前端点击某个按钮，然后后端返回所有的“原始订单信息”
    /**
     使用url->“/sto”，后端返回CommonResult<List<StoStoreOrder>> 对象， 该对象的data属性为
     List<StoStoreOrder> 对象，即一个储存了StoStoreOrder对象的列表
    **/
    @ApiOperation("返回所有的sto对象,sto->原式订单信息")
    @GetMapping("/sto")
    public CommonResult<List<StoStoreOrder>> getStoStoreOrder();

    2.应用场景：前端在品牌商订单管理界面点击“待发货”，“已发货”等各种模块按钮的时候，前端往后端发送一个表示该模块的String参数，后端通过
    这个String参数来返回对应的“原式订单详细信息”
    /**
     使用url->“/sol”，后端返回CommonResult<List<SolStoreOrderLineItem>> 对象， 该对象的data属性为
     List<SolStoreOrderLineItem> 对象，即一个储存了SolStoreOrderLineItem对象的列表
    **/
    @ApiOperation("根据状态返回sol对象,sol->原式订单详细信息")
    @GetMapping("/sol")

    3.应用场景：前端在销售商订单管理界面点击“待发货”，“已发货”等各种模块按钮的时候，前端往后端发送一个表示该模块的String参数，后端通过
    这个String参数来返回对应的“原式订单详细信息”
    /**
     使用url->“/sal”，后端返回CommonResult<List<SalSalesOrderLineItem>> 对象， 该对象的data属性为
     List<SalSalesOrderLineItem> 对象，即一个储存了SalSalesOrderLineItem对象的列表
    **/
    @ApiOperation("根据状态返回sal对象,sal->销售订单详细信息")
    @GetMapping("/sal")

